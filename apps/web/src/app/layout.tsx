import "./globals.css"
import "@repo/ui/styles.css"
import "@repo/cms-ui/styles.css"
import type { Metadata } from "next"
import { cn } from "@repo/ui/cn"

import fonts from "../fonts"
import { ThemeProvider } from "@repo/ui/theme-provider"
import { CmsProvider } from "@repo/cms-ui/store.cms"
import {
  getDocumentsAction,
  deleteRowAction,
  updateDataAction,
  updateSlugAction,
} from "@repo/cms/actions/document.actions"
import {
  deleteColumnAction,
  insertColumnAction,
  sortColumnAction,
  updateColumnAction,
} from "@repo/cms/actions/column.actions"
import {
  getCollectionsAction,
  updateColumnOrderAction,
} from "@repo/cms/actions/collection.actions"
import {
  deleteCollectionAction,
  addNewCollectionAction,
  renameCollectionAction,
} from "@repo/cms/actions/collection.actions"

export const metadata: Metadata = {
  title: "365 CMS",
  description: "Generated by create turbo",
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}): JSX.Element {
  const schema = "t_1"
  const userId = 1

  return (
    <html
      lang='en'
      className='scroll-smooth antialiased relative'
      suppressHydrationWarning
    >
      <body className={cn(fonts.text.className, "flex flex-col")}>
        <ThemeProvider
          enableSystem
          attribute='class'
          defaultTheme='light'
          disableTransitionOnChange
        >
          <CmsProvider
            getDocuments={getDocumentsAction({ schema })}
            getCollections={getCollectionsAction({ schema })}
            deleteColumn={deleteColumnAction({ schema })}
            deleteRow={deleteRowAction({ schema })}
            insertColumn={insertColumnAction({ schema, userId })}
            sortColumn={sortColumnAction({
              schema,
              userId,
            })}
            updateColumn={updateColumnAction({ schema, userId })}
            updateColumnOrder={updateColumnOrderAction({
              schema,
              userId,
            })}
            updateData={updateDataAction({ schema, userId })}
            updateSlug={updateSlugAction({ schema, userId })}
            addNewCollection={addNewCollectionAction({ schema, userId })}
            deleteCollection={deleteCollectionAction({ schema })}
            renameCollection={renameCollectionAction({ schema, userId })}
          >
            <main className='grow p-10'>{children}</main>
          </CmsProvider>
        </ThemeProvider>
      </body>
    </html>
  )
}
